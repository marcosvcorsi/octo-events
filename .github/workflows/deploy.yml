# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run.
on:
  push:
    branches:
      - main
      - staging

  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Setup node version
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # NPM Cache
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Install dependencies
      - name: Build
        run: npm run build

      - name: Run unit tests
        run: npm run test

      - name: Run integration tests
        run: npm run test:integration
        
      - name: Set env BRANCH
        run: echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV

      - name: Set env STAGE
        run: |
          if [[ $BRANCH == 'main' ]]; then
              echo "APP_NAME=mvc-octo-events" >> "$GITHUB_ENV"
          else
              echo "APP_NAME=mvc-octo-events" >> "$GITHUB_ENV"
          fi
        
      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      
      - name: Login to Heroku Container registry
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
        
      - name: Build and push
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:push -a ${{ env.APP_NAME }} web 
 

#       - name: Deploy Heroku
#         uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
#         with:
#           heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#           heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
#           heroku_email: ${{secrets.HEROKU_EMAIL}}
#           usedocker: true
#           docker_heroku_process_type: web
#           stack: container
#           healthcheck: 'https://${{secrets.HEROKU_APP_NAME}}.herokuapp.com/health'
#           checkstring: 'ok'
#           delay: 10
#           rollbackonhealthcheckfailed: true
